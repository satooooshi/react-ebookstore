---
apiVersion: v1
kind: Namespace
metadata:
  name: mytest
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: reactbookfront
  namespace: mytest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: reactbookfront
  template:
    metadata:
      labels:
        app: reactbookfront
    spec:
      containers:
      - name: reactbookfront
        image: superheatedboy/reactbookfront:latest
        imagePullPolicy: IfNotPresent
        tty: true
        env:
        - name: NODE_OPTIONS
          value: '--openssl-legacy-provider'
        - name: REACT_APP_DEV_API_URL
          value: 'http://47.242.83.44:3001'
        - name: REACT_APP_REST_HOST 
          value: 'http://productsapi'
        - name: REACT_APP_REST_PORT
          value: '3001'
        - name: REACT_APP_DEV_TOKEN_API_URL
          value: 'http://tokenapi:3002'
        ports:
        - containerPort: 3000
        #command: ["npm", "run", "start-client"]
---
apiVersion: v1
kind: Service
metadata:
  name: reactbookfront
  namespace: mytest
spec:
  type: NodePort
  selector:
    app: reactbookfront
  ports:
    - port: 3000
      targetPort: 3000
      nodePort: 30000
      protocol: TCP
      name: reactbookfront
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: productsapi
  namespace: mytest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: productsapi
  template:
    metadata:
      labels:
        app: productsapi
    spec:
      containers:
      - name: productsapi
        image: superheatedboy/productsapi:latest
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3001
        env:
        - name: NODE_OPTIONS
          value: '--openssl-legacy-provider'
        #command: ["npm", "start"]
---
apiVersion: v1
kind: Service
metadata:
  name: productsapi
  namespace: mytest
spec:
  type: NodePort
  selector:
    app: productsapi
  ports:
    - port: 3001
      targetPort: 3001
      nodePort: 30001
      protocol: TCP
      name: productsapi

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tokenapi
  namespace: mytest
spec:
  replicas: 1
  selector:
    matchLabels:
      app: tokenapi
  template:
    metadata:
      labels:
        app: tokenapi
    spec:
      containers:
      - name: tokenapi
        image: superheatedboy/tokenapi:latest 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3002
        env:
        - name: NODE_OPTIONS
          value: '--openssl-legacy-provider'
        #command: ["node", "server.js"]

---
apiVersion: v1
kind: Service
metadata:
  name: tokenapi
  namespace: mytest
spec:
  type: NodePort
  selector:
    app: tokenapi
  ports:
    - port: 3002
      targetPort: 3002
      nodePort: 30002
      protocol: TCP
      name: tokenapi



---

#cat <<EOF | kubectl apply -f -
apiVersion: v1
kind: Pod
metadata:
  name: busybox-sleep
  namespace: mytest
spec:
  containers:
  - name: busybox
    image: busybox
    args:
    - sleep
    - "1000000"
#EOF
